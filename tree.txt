(program (stat write (expr "<Constants>") ;) (stat write (expr "10: ") , (expr 10) ;) (stat write (expr " 1.25: ") , (expr 1.25) ;) (stat write (expr "") ;) (stat ;) (stat write (expr "<Variables>") ;) (stat (primitiveType string) s ;) (stat (expr s = (expr "Abcd")) ;) (stat write (expr "s(Abcd): ") , (expr s) ;) (stat (primitiveType float) d ;) (stat (expr d = (expr 3.141592)) ;) (stat write (expr "d(3.141592): ") , (expr d) ;) (stat (primitiveType int) n ;) (stat (expr n = (expr - (expr 500))) ;) (stat write (expr "n(-500): ") , (expr n) ;) (stat write (expr "") ;) (stat (primitiveType bool) boolean ;) (stat (expr boolean = (expr true)) ;) (stat write (expr "boolean(true): ") , (expr boolean) ;) (stat write (expr "") ;) (stat write (expr "<Expressions>") ;) (stat write (expr "2+3*5(17): ") , (expr (expr 2) + (expr (expr 3) * (expr 5))) ;) (stat write (expr "17 / 3(5): ") , (expr (expr 17) / (expr 3)) ;) (stat write (expr "17 % 3(2): ") , (expr (expr 17) % (expr 3)) ;) (stat write (expr "2.5*2.5/6.25(1.0): ") , (expr (expr (expr 2.5) * (expr 2.5)) / (expr 6.25)) ;) (stat write (expr "1.5*3(4.5): ") , (expr (expr 1.5) * (expr 3)) ;) (stat write (expr "abc+def (abcdef): ") , (expr (expr "abc") . (expr "def")) ;) (stat write (expr "") ;) (stat write (expr "<Comments>") ;))